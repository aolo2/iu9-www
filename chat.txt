Коллекция в монге: chatroom
Структура документа:
{
  "_id" - BsonId
  "title" - string
  "createdAt" - ISODate
  "users" - массив строк (ников пользователей)
  "messages" - 
}


получать для пользователя все открытые сессии (scan redis)

На уровне NodeJS отображение
{
  "user": "websocket obj"
}

лучше даже не пользователь, а сессия
ибо можно зайти с двух браузеров
пишем в словарь сразу как открылся вебсокет



## События
### Создание чата
Записать в базу объект (см. выше)
Добавить идентификатор чата в объект пользователя (для получения всех моих чатов)
Сразу же добавить в локальный словарь


### Удаление чата
Удалить объект из базы, закрыть соединения всех участников
Удалить чат из объекта пользователя
Удалить чат из локального словаря, если он в нем есть

### Пользователь зашел (логин)
Пользователь делает запрос на открытие вебсокета.
Со стороны сервера залезаем в базу, смотрим все чаты пользователя
Присылаем историю переписки всех чатов (в формате: [roomId: {история, title, ...}])
Пользователя помечаем как "онлайн" в локальном словаре (и в базе?)

### Пользователь вышел
Польователя помечаем как "оффлайн". То же делаем, если сообщение не пришло.
При каждом удачном взаимодействии заново помечаем как "онлайн".

### Пользователь отправил сообщение
Смотрим в какой чат было отправлено сообщение. Если этот чат еще "не в кеше" -
достаем чат из базы (объект) и кладем (отображение из id в объект)

Берем сообщение пользователя и добавляем в историю (только в базе???)
Для всех "онлайн" пользователей делаем send

*Добавили пользователя в чат
*Удалили
